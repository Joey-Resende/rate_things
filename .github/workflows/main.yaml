name: CI
on: 
  push:
    branches:
      - "*"
  pull request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-test: true
      matrix:
      python-version: ['3.8', '3.9', '3.10']
      os: [ubunto-latest]
    runs-on: ${{matrix.os}} 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install Poetry
        run: pip install --upgrade pip && pip install poetry

      - name: Install Project
        run: poetry install
      
      - name: Look for style errors
        run: poetry run flake8 rate_things
      
      - name: Look for auto format errors
        run: poetry run blue -l 79 --check --diff rate_things tests
      
      - name: Run tests
        run: poetry run pytest -v --junitxml=test-result.xml
      
      - name: publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-result.xml
          check_name: Test Result (Python ${{matrix.python-version}})
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/day4'
    steps:
      - uses: actions/checkout@v2

      - name: Configurando as credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login no Docker Hub
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Buildando a imagem
        run: docker build -t coding.../rate_things:2.0 --file docker/Dockerfile .

      - name: Push para o Docker Hub
        uses: actions-hub/docker@master
        with:
          args: push coding.../rate_things:2.0

      - name: Deploy da APP para o K8s
        uses: kodermax/kubectl-aws-eks@master
        env: 
          RELEASE_IMAGE: coding.../rate_things:2.0
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f kubernetes/deployment.yaml --record

      - name: Deploy do service da APP
        uses: kodermax/kubectl-aws-eks@master
        env: 
          RELEASE_IMAGE: coding.../rate_things:2.0
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f kubernetes/service.yaml --record